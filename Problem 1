#Combination Sum

#Tc:O(2^N)
#Sc:O(2^N)

class Solution:
    def combinationSum(self, candidates, target):
        result = []
        
        def backtrack(start, path, target):
            if target == 0:
                result.append(path)
                return
            if target < 0:
                return
            for i in range(start, len(candidates)):
                backtrack(i, path + [candidates[i]], target - candidates[i])
        
        candidates.sort()  # Sort candidates to handle duplicates
        backtrack(0, [], target)
        return result
