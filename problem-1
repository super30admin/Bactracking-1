class Solution {
    List<List<Integer>> result=new ArrayList<>();
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        Arrays.sort(candidates);
        helper(candidates,new ArrayList<>(),0,target,0);
        return result;
    }
    public void helper(int[] candidates,List<Integer> li,int currSum,int target,int start){
        if(currSum>target){
            return;
        }
        
        else if(currSum==target){
            result.add(new ArrayList<>(li));
            
        }else{
        for(int i=start;i<candidates.length;i++){
            if(i>0 && candidates[i]==candidates[i-1]) continue;
            li.add(candidates[i]);
           
            
         
         helper(candidates,li,currSum+candidates[i],target,i);
            li.remove(li.size()-1);
    }
        }
}
}
